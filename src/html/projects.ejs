<!DOCTYPE html>
<html lang="en"
      style="--bs-body-color: rgba(255, 255, 255, 0.5); --bs-body-bg: black; --bs-active-color: white;">
<%- include("components/_head.ejs") %>
<body id="page-top" data-bs-spy="scroll" data-bs-target="#projectNav" data-bs-offset="200" style="position: relative;">
<%- include("components/_embedded_svgs.ejs") %>
<%- include("components/_nav.ejs") %>
<%- include("components/_masthead.ejs") %>

<!-- Additional Embedded SVGs -->
<svg xmlns="http://www.w3.org/2000/svg" style="display: none">
    <defs>
        <symbol id="proj-robomaster" viewBox="0 0 16 16" fill="currentColor">
            <path d="M6 12.5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 0 1h-3a.5.5 0 0 1-.5-.5M3 8.062C3 6.76 4.235 5.765 5.53 5.886a26.58 26.58 0 0 0 4.94 0C11.765 5.765 13 6.76 13 8.062v1.157a.933.933 0 0 1-.765.935c-.845.147-2.34.346-4.235.346-1.895 0-3.39-.2-4.235-.346A.933.933 0 0 1 3 9.219zm4.542-.827a.25.25 0 0 0-.217.068l-.92.9a24.767 24.767 0 0 1-1.871-.183.25.25 0 0 0-.068.495c.55.076 1.232.149 2.02.193a.25.25 0 0 0 .189-.071l.754-.736.847 1.71a.25.25 0 0 0 .404.062l.932-.97a25.286 25.286 0 0 0 1.922-.188.25.25 0 0 0-.068-.495c-.538.074-1.207.145-1.98.189a.25.25 0 0 0-.166.076l-.754.785-.842-1.7a.25.25 0 0 0-.182-.135Z"/>
            <path d="M8.5 1.866a1 1 0 1 0-1 0V3h-2A4.5 4.5 0 0 0 1 7.5V8a1 1 0 0 0-1 1v2a1 1 0 0 0 1 1v1a2 2 0 0 0 2 2h10a2 2 0 0 0 2-2v-1a1 1 0 0 0 1-1V9a1 1 0 0 0-1-1v-.5A4.5 4.5 0 0 0 10.5 3h-2zM14 7.5V13a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V7.5A3.5 3.5 0 0 1 5.5 4h5A3.5 3.5 0 0 1 14 7.5"/>
        </symbol>
        <symbol id="proj-joystick" viewBox="0 0 16 16" fill="currentColor">
            <path d="M10 2a2 2 0 0 1-1.5 1.937v5.087c.863.083 1.5.377 1.5.726 0 .414-.895.75-2 .75s-2-.336-2-.75c0-.35.637-.643 1.5-.726V3.937A2 2 0 1 1 10 2"/>
            <path d="M0 9.665v1.717a1 1 0 0 0 .553.894l6.553 3.277a2 2 0 0 0 1.788 0l6.553-3.277a1 1 0 0 0 .553-.894V9.665c0-.1-.06-.19-.152-.23L9.5 6.715v.993l5.227 2.178a.125.125 0 0 1 .001.23l-5.94 2.546a2 2 0 0 1-1.576 0l-5.94-2.546a.125.125 0 0 1 .001-.23L6.5 7.708l-.013-.988L.152 9.435a.25.25 0 0 0-.152.23z"/>
        </symbol>
        <symbol id="proj-hololens" viewBox="0 0 16 16" fill="currentColor">
            <path d="M14 3a1 1 0 0 1 1 1v8a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1zM2 2a2 2 0 0 0-2 2v8a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V4a2 2 0 0 0-2-2z"/>
            <path d="M4.508 11h1.429l1.99-5.999H6.61L5.277 9.708H5.22L3.875 5.001H2.5zm6.387-5.999H8.5V11h1.173V8.763h1.064L11.787 11h1.327L11.91 8.583C12.455 8.373 13 7.779 13 6.9c0-1.147-.773-1.9-2.105-1.9zm-1.222 2.87V5.933h1.05c.63 0 1.05.347 1.05.989 0 .633-.408.95-1.067.95z"/>
        </symbol>
        <symbol id="proj-klc3" viewBox="0 0 16 16" fill="currentColor">
            <path fill-rule="evenodd"
                  d="M1.114 8.063V7.9c1.005-.102 1.497-.615 1.497-1.6V4.503c0-1.094.39-1.538 1.354-1.538h.273V2h-.376C2.25 2 1.49 2.759 1.49 4.352v1.524c0 1.094-.376 1.456-1.49 1.456v1.299c1.114 0 1.49.362 1.49 1.456v1.524c0 1.593.759 2.352 2.372 2.352h.376v-.964h-.273c-.964 0-1.354-.444-1.354-1.538V9.663c0-.984-.492-1.497-1.497-1.6ZM14.886 7.9v.164c-1.005.103-1.497.616-1.497 1.6v1.798c0 1.094-.39 1.538-1.354 1.538h-.273v.964h.376c1.613 0 2.372-.759 2.372-2.352v-1.524c0-1.094.376-1.456 1.49-1.456v-1.3c-1.114 0-1.49-.362-1.49-1.456V4.352C14.51 2.759 13.75 2 12.138 2h-.376v.964h.273c.964 0 1.354.444 1.354 1.538V6.3c0 .984.492 1.497 1.497 1.6M7.5 11.5V9.207l-1.621 1.621-.707-.707L6.792 8.5H4.5v-1h2.293L5.172 5.879l.707-.707L7.5 6.792V4.5h1v2.293l1.621-1.621.707.707L9.208 7.5H11.5v1H9.207l1.621 1.621-.707.707L8.5 9.208V11.5z"/>
        </symbol>
        <symbol id="proj-charging" viewBox="0 0 16 16" fill="currentColor">
            <path d="M3.05 3.05a7 7 0 0 0 0 9.9.5.5 0 0 1-.707.707 8 8 0 0 1 0-11.314.5.5 0 0 1 .707.707m2.122 2.122a4 4 0 0 0 0 5.656.5.5 0 1 1-.708.708 5 5 0 0 1 0-7.072.5.5 0 0 1 .708.708m5.656-.708a.5.5 0 0 1 .708 0 5 5 0 0 1 0 7.072.5.5 0 1 1-.708-.708 4 4 0 0 0 0-5.656.5.5 0 0 1 0-.708m2.122-2.12a.5.5 0 0 1 .707 0 8 8 0 0 1 0 11.313.5.5 0 0 1-.707-.707 7 7 0 0 0 0-9.9.5.5 0 0 1 0-.707zM10 8a2 2 0 1 1-4 0 2 2 0 0 1 4 0"/>
        </symbol>
        <symbol id="proj-os" viewBox="0 0 16 16" fill="currentColor">
            <text transform="matrix(1 0 0 1 5.328083e-02 12.0681)" style=font-size:11px;">OS</text>
        </symbol>
        <symbol id="proj-chip" viewBox="0 0 16 16" fill="currentColor">
            <path d="M5 0a.5.5 0 0 1 .5.5V2h1V.5a.5.5 0 0 1 1 0V2h1V.5a.5.5 0 0 1 1 0V2h1V.5a.5.5 0 0 1 1 0V2A2.5 2.5 0 0 1 14 4.5h1.5a.5.5 0 0 1 0 1H14v1h1.5a.5.5 0 0 1 0 1H14v1h1.5a.5.5 0 0 1 0 1H14v1h1.5a.5.5 0 0 1 0 1H14a2.5 2.5 0 0 1-2.5 2.5v1.5a.5.5 0 0 1-1 0V14h-1v1.5a.5.5 0 0 1-1 0V14h-1v1.5a.5.5 0 0 1-1 0V14h-1v1.5a.5.5 0 0 1-1 0V14A2.5 2.5 0 0 1 2 11.5H.5a.5.5 0 0 1 0-1H2v-1H.5a.5.5 0 0 1 0-1H2v-1H.5a.5.5 0 0 1 0-1H2v-1H.5a.5.5 0 0 1 0-1H2A2.5 2.5 0 0 1 4.5 2V.5A.5.5 0 0 1 5 0m-.5 3A1.5 1.5 0 0 0 3 4.5v7A1.5 1.5 0 0 0 4.5 13h7a1.5 1.5 0 0 0 1.5-1.5v-7A1.5 1.5 0 0 0 11.5 3zM5 6.5A1.5 1.5 0 0 1 6.5 5h3A1.5 1.5 0 0 1 11 6.5v3A1.5 1.5 0 0 1 9.5 11h-3A1.5 1.5 0 0 1 5 9.5zM6.5 6a.5.5 0 0 0-.5.5v3a.5.5 0 0 0 .5.5h3a.5.5 0 0 0 .5-.5v-3a.5.5 0 0 0-.5-.5z"/>
        </symbol>
    </defs>
</svg>

<!-- Project Navigation -->
<nav class="project-nav nav flex-column" id="projectNav" style="opacity: 0">
    <a class="nav-link" href="#roboMaster">
        <svg>
            <use xlink:href="#proj-robomaster"></use>
        </svg>
    </a>
    <a class="nav-link" href="#netEaseGame">
        <svg>
            <use xlink:href="#proj-joystick"></use>
        </svg>
    </a>
    <a class="nav-link" href="#hololens3DScanning">
        <svg>
            <use xlink:href="#proj-hololens"></use>
        </svg>
    </a>
    <a class="nav-link" href="#klc3">
        <svg>
            <use xlink:href="#proj-klc3"></use>
        </svg>
    </a>
    <a class="nav-link" href="#wirelessChargingTable">
        <svg>
            <use xlink:href="#proj-charging"></use>
        </svg>
    </a>
    <a class="nav-link show-lg" href="#combinedOS">
        <svg>
            <use xlink:href="#proj-os"></use>
        </svg>
    </a>
    <nav class="nav flex-column hidden-lg">
        <a class="nav-link" href="#auroraOS">
            <svg>
                <use xlink:href="#proj-os"></use>
            </svg>
        </a>
        <a class="nav-link" href="#ozone">
            <svg>
                <use xlink:href="#proj-os"></use>
            </svg>
        </a>
    </nav>
    <a class="nav-link show-lg" href="#combinedChip">
        <svg>
            <use xlink:href="#proj-chip"></use>
        </svg>
    </a>
    <nav class="nav flex-column hidden-lg">
        <a class="nav-link" href="#riscvProcessor">
            <svg>
                <use xlink:href="#proj-chip"></use>
            </svg>
        </a>
        <a class="nav-link" href="#boxhead">
            <svg>
                <use xlink:href="#proj-chip"></use>
            </svg>
        </a>
    </nav>
</nav>

<!-- Projects-->
<section class="projects-section bg-black" id="projects">
    <div class="container px-1 px-lg-5">
        <!-- RoboMaster -->
        <div class="row gx-0 justify-content-center align-items-center project-container" id="roboMaster">
            <div class="col-lg-4 mt-auto mb-0 mb-lg-auto px-3 px-lg-5 project-svg-container pb-1 pb-lg-5">
                <!-- pb-lg-5 shift it up a little -->
                <div class="icon-placeholder text-center text-white-50"
                     data-include="/assets/robomaster-icon.svg">
                    Loading image...
                </div>
            </div>
            <div class="col-lg-8 mt-0 mb-auto mb-lg-0 project-text text-start">
                <h2 class="project-header mb-3 slide-in-text">RoboMaster</h2>
                <p class="slide-in-text">
                    At the <span class="text-white">ZJU-UIUC Robotics Team,</span> we build robots for the RoboMaster
                    competition.
                </p>
                <p class="slide-in-text">
                    Being the <span class="text-white">Control Group Lead</span> and
                    the <span class="text-white">Project Manager</span> in&nbsp;2019,
                    I led the development of embedded control systems and
                    managed project timelines.
                </p>
                <p class="slide-in-text">
                    As the <span class="text-white">Vision Group Lead</span> in&nbsp;2020-2021,
                    I worked on a vision-assisted automatic aiming system.
                </p>
                <div class="mt-4 text-end slide-in-text ">
                    <p class="read-more-button" data-bs-toggle="modal" onclick="readMoreClicked(this)"
                       data-bs-target="#robomasterMore">
                        Read&nbsp;more&nbsp;
                        <svg width="1.2em" height="1.5em" class="read-more-button-circle">
                            <use xlink:href="#bi-plus-circle-fill"></use>
                        </svg>
                    </p>
                </div>
            </div>
        </div>
        <div class="modal fade" id="robomasterMore" tabindex="-1" aria-labelledby="robomasterMoreLabel"
             aria-hidden="true">
            <div class="modal-dialog modal-fullscreen">
                <div class="modal-content">
                    <button type="button" class="modal-close" data-bs-dismiss="modal" aria-label="Close">
                        <svg width="1em" height="1em">
                            <use xlink:href="#bi-x-circle"></use>
                        </svg>
                    </button>
                    <div class="modal-body px-0 py-0 py-lg-4">
                        <div class="hidden-lg" id="robomaster-head-image">
                            <!-- use css to apply gradient without creating another image, although it cannot benefit from lazy loading-->
                        </div>
                        <div class="container">
                            <div class="row gx-0 mb-5 mb-lg-0 justify-content-center align-items-start">
                                <div class="col-lg-8 mt-0">
                                    <div class="project-text w-100 my-auto text-start text-lg-left">
                                        <p>
                                            <!-- Not using popover for tooltip as it requires too many dependencies -->
                                            <span class="text-white">Meta</span>(<a
                                                    onclick="document.getElementById('meta-name').style.display = 'block';">?</a>)
                                            <span class="text-white">Robotics of ZJU-UIUC Joint
                                            Institute </span>
                                            was founded in 2018. I was one of the founding members.
                                            We targeted the <a target="_blank" rel="noopener noreferrer"
                                                               href="https://www.robomaster.com">RoboMaster</a>
                                            competition and built our robots from scratch.
                                            As a new team at a new campus without any experience and
                                            technology heritage, unfortunately, in 2018, we didn't make it to the
                                            competition.
                                        </p>
                                        <p class="image-caption" id="meta-name" style="display: none;">
                                            ? Yes, Facebook was not yet Meta back then
                                        </p>
                                        <p>
                                            In 2019, I took the role of the <span class="text-white">Control Group
                                            Lead</span>. I led the development of embedded control programs and
                                            electric systems for robots, built from the ground up.
                                            We developed a cross-platform build system for STM32 microcontrollers,
                                            supporting Windows, Linux, and macOS.
                                            To ease the parameter tuning work, we also developed a wireless parameter
                                            tuning utility with a graphic user interface (GUI). During the 2019 season,
                                            I contributed 70k+ lines of C++ code and 20+ documents to the codebase.
                                        </p>
                                        <p>
                                            Among the things we have built, I am most proud of the attitude and heading
                                            reference system (AHRS).
                                            In this subsystem, a gyroscope, an accelerometer and a magnetometer are
                                            integrated to calculate the absolute angle of the targeting gimbal.
                                            Together with the motor control system, our robots were able to
                                            stabilize the gimbal while rotating the chassis to evade incoming bullets,
                                            which provided us considerable advantage in the competition.
                                        </p>
                                        <p>
                                            At the same time, I worked as the <span class="text-white">Project
                                            Manager</span> in 2019 season.
                                            I was responsible for scheduling the overall development timeline and
                                            coordinating different groups.
                                            I arranged the weekly stand-up meetings, where members exchanged updates and
                                            settled the upcoming schedule.
                                            Together with other team leaders, we kept the whole team moving forward.
                                        </p>
                                        <p>
                                            In the RoboMaster 2019 International Regional Competition, as our debut, we
                                            won <a class="text-white" target="_blank" rel="noopener noreferrer"
                                                   href="https://zjui.intl.zju.edu.cn/en/news/746">the fifth place</a>
                                            among all the international teams.
                                            It's only achievable with the joint effort of the whole team.
                                        </p>
                                        <p>
                                            From 2020 to 2021, I worked as the <span class="text-white">Vision Group Lead</span>
                                            of the team. I worked on a vision-assisted automatic aiming system,
                                            for which I have contributed 27k+ lines of C++ code.
                                        </p>
                                        <div class="mt-5 text-center">
                                            <a class="btn shadow-none project-details-link "
                                               target="_blank"
                                               rel="noopener noreferrer" href="https://github.com/Meta-Team">
                                                View Repos on
                                                <svg width="1em" height="1em" style="position: relative; top: -0.15em">
                                                    <use xlink:href="#bi-github"></use>
                                                </svg>
                                                GitHub&nbsp;<svg width="1em" height="1em"
                                                                 style="position: relative; top: -0.15em">
                                                    <use xlink:href="#bi-chevron-right"></use>
                                                </svg>
                                            </a>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-4 px-lg-4 mt-0 order-last order-lg-first">
                                    <div class="modal-gallery text-center">
                                        <!-- First side image only showing in lg mode -->
                                        <img class="modal-image show-lg" src="" data-src="/assets/robomaster-me.jpg"
                                             alt="RoboMaster 2019"/>
                                        <p class="image-caption show-lg">RoboMaster 2019</p>
                                        <!-- Additional images -->
                                        <img class="modal-image" src="" data-src="/assets/robomaster-competition.jpg"
                                             alt="RoboMaster 2019"/>
                                        <p class="image-caption">RoboMaster 2019</p>
                                        <img class="modal-image" src="" data-src="/assets/robomaster-we.jpg"
                                             alt="Meta Robotics in 2019"/>
                                        <p class="image-caption">Meta Robotics in 2019</p>
                                        <img class="modal-image" src="" data-src="/assets/robomaster-teams.jpg"
                                             alt="With Fukuoka and Guangdong Taiwan Chung Cheng University Teams"/>
                                        <p class="image-caption">With Fukuoka and Guangdong
                                            Taiwan Chung Cheng University Teams</p>
                                    </div>

                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- NetEase Game -->
        <div class="row gx-0 justify-content-center align-items-center project-container" id="netEaseGame">
            <div class="col-lg-4 mt-auto mb-0 mb-lg-auto px-3 project-svg-container pb-4 pb-lg-0">
                <div class="h-auto">
                    <div class="icon-placeholder text-center text-white-50"
                         data-include="/assets/joystick-icon.svg">
                        Loading image...
                    </div>
                </div>
            </div>
            <div class="col-lg-8 order-lg-first mt-0 mb-auto mb-lg-0 project-text text-start">
                <h2 class="project-header mb-3 slide-in-text">
                    Joystick Module for the NetEase Android Emulator
                </h2>
                <p class="slide-in-text">
                    During Summer&nbsp;2020, as a <span
                            class="text-white">Platform Engineer Intern at NetEase Game</span>,
                    I developed a driver module that automatically detects and configures joystick keymaps,
                    providing <span class="text-white">plug-and-play user experience</span> for joystick users of
                    the NetEase Android Emulator.
                </p>
                <div class="mt-4 text-end slide-in-text ">
                    <p class="read-more-button" data-bs-toggle="modal" onclick="readMoreClicked(this)"
                       data-bs-target="#netEaseGameMore">
                        Read&nbsp;more&nbsp;
                        <svg width="1.2em" height="1.5em" class="read-more-button-circle">
                            <use xlink:href="#bi-plus-circle-fill"></use>
                        </svg>
                    </p>
                </div>
            </div>
        </div>
        <div class="modal fade" id="netEaseGameMore" tabindex="-1" aria-labelledby="netEaseGameMoreLabel"
             aria-hidden="true">
            <div class="modal-dialog modal-fullscreen">
                <div class="modal-content">
                    <button type="button" class="modal-close" data-bs-dismiss="modal" aria-label="Close">
                        <svg width="1em" height="1em">
                            <use xlink:href="#bi-x-circle"></use>
                        </svg>
                    </button>
                    <div class="modal-body px-0 py-0 py-lg-4">
                        <div class="hidden-lg" id="joystick-head-image">
                            <!-- use css to apply gradient without creating another image, although it cannot benefit from lazy loading-->
                        </div>
                        <div class="container">
                            <div class="row gx-0 mb-5 mb-lg-0 justify-content-center align-items-start">
                                <div class="col-lg-8 mt-0">
                                    <div class="project-text w-100 my-auto text-start text-lg-left">
                                        <p>
                                            On Windows, most joysticks are connected to games or applications using the
                                            <span class="text-white">DirectInput</span> API.
                                            DirectInput is flexible, but it lacks a unified keymap standard.
                                            For example, the same virtual key in DirectInput can map to key "A" for one
                                            joystick, but to key "B" for another.
                                            The NetEase Android Emulator used the DirectInput API.
                                            Therefore, the default keymap may not be accurate.
                                            Users needed to manually configure the joystick when connecting for the
                                            first time.
                                        </p>
                                        <p>
                                            When Microsoft rolled out their own joysticks&mdash;the Xbox controllers, a
                                            new interface called <span class="text-white">XInput</span> was introduced.
                                            XInput is more well-defined and easier to use, but only supports the Xbox
                                            controllers.
                                            There are open-source tools that map other joysticks to XInput.
                                            However, they require a lot of manual configurations.
                                        </p>
                                        <p>
                                            In addition, there was another challenge for the NetEase Android Emulator.
                                            As Nintendo Switch become popular, more and more users get their
                                            <span class="text-white">Nintendo Switch Joy-Cons</span> and want to use
                                            them in the NetEase Android Emulator.
                                            However, as a pair of two separate controllers, Joy-Cons are recognized as
                                            two DirectInput devices on Windows.
                                            To use the two pieces as one full joystick, the program needs to support
                                            reading from two joysticks simultaneously, which is not supported back then.
                                            In addition, the advanced functions of Joy-Cons such as the gyroscope and
                                            the haptic feedback are not available through DirectInput.
                                        </p>
                                        <p>
                                            We intended to provide a
                                            <span class="text-white">smooth user experience</span>
                                            for joystick users of the NetEase Emulator.
                                            Therefore, we introduced a new adapter module.
                                            We integrate a community-contributed joystick keymap database of into the
                                            system.
                                            When a user plugs a joystick in, the module looks it up and applies the
                                            keymap automatically, unifying DirectInput, XInput and the Joy-Con-specific
                                            interface into an emulated XInput interface.
                                            The user can also manually configure the keymap through an intuitive graphic
                                            user interface (GUI).
                                            For Joy-Cons, two pieces are merged automatically (in fact, the module
                                            supports merging arbitrary numbers of joysticks).
                                            Gyroscope and haptic feedback are supported. Users can even map the
                                            gyroscope to axes or buttons, turning games into interactive ones.
                                        </p>
                                    </div>
                                </div>
                                <div class="col-lg-4 px-lg-4 mt-0 order-last order-lg-first">
                                    <div class="modal-gallery text-center">
                                        <!-- First side image only showing in lg mode -->
                                        <img class="modal-image show-lg" src="" data-src="/assets/joystick-photo.jpg"
                                             alt="Various Joysticks"/>
                                        <p class="image-caption show-lg">Various Joysticks</p>
                                        <!-- Additional images -->
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Hololens 3D Scanning -->
        <div class="row gx-0 justify-content-center align-items-center project-container" id="hololens3DScanning">
            <div class="col-lg-4 mt-auto mb-0 mb-lg-auto px-3 px-lg-4 project-svg-container pb-4 pb-lg-0">
                <div class="h-auto">
                    <div class="icon-placeholder text-center text-white-50"
                         data-include="/assets/hololens-icon.svg">Loading image...
                    </div>
                </div>
            </div>
            <div class="col-lg-8 mt-0 mb-auto mb-lg-0 project-text text-start">
                <h2 class="project-header mb-3 slide-in-text">
                    3D Scanning with Mixed Reality Headsets
                </h2>
                <p class="slide-in-text">
                    A system for near-real-time 3D scanning and reconstruction on <span class="text-white">Microsoft HoloLens&nbsp;2</span>.
                    It uses the depth camera on the headset to acquire depth data. User holds the object in hands and
                    gets visual feedback via the <span class="text-white">mixed reality</span> experience.
                </p>
                <div class="mt-4 text-end slide-in-text ">
                    <p class="read-more-button" data-bs-toggle="modal" onclick="readMoreClicked(this)"
                       data-bs-target="#hololens3DScanningMore">
                        Read&nbsp;more&nbsp;
                        <svg width="1.2em" height="1.5em" class="read-more-button-circle">
                            <use xlink:href="#bi-plus-circle-fill"></use>
                        </svg>
                    </p>
                </div>
            </div>
        </div>
        <div class="modal fade" id="hololens3DScanningMore" tabindex="-1"
             aria-labelledby="hololens3DScanningMoreLabel"
             aria-hidden="true">
            <div class="modal-dialog modal-fullscreen">
                <div class="modal-content">
                    <button type="button" class="modal-close" data-bs-dismiss="modal" aria-label="Close">
                        <svg width="1em" height="1em">
                            <use xlink:href="#bi-x-circle"></use>
                        </svg>
                    </button>
                    <div class="modal-body px-0 py-0 py-lg-4">
                        <div class="text-center hidden-lg">
                            <img class="modal-image" src="" data-src="/assets/hololens-scanning.jpg"
                                 alt="The 3D scanning process with mixed reality experience"/>
                            <p class="image-caption">The 3D Scanning Process with Mixed Reality Experience</p>
                        </div>
                        <div class="container">
                            <div class="row gx-0 mb-5 mb-lg-0 justify-content-center align-items-start">
                                <div class="col-lg-8 mt-0">
                                    <div class="project-text w-100 my-auto text-start text-lg-left">
                                        <p>
                                            During the course <span
                                                    class="text-white">Mixed Reality at ETH Zurich</span>, my teammates
                                            and I developed a system for scanning and reconstructing irregular
                                            geometries using a mixed-reality headset&mdash;Microsoft HoloLens 2.
                                        </p>
                                        <p>
                                            Our goal was to provide <span class="text-white">near-real-time 3D scanning and reconstruction</span>.
                                            The system consists of a HoloLens 2 and a host computer, connected
                                            by a cable or wirelessly.
                                            The user holds the object to scan in hands, and starts the scanning process
                                            with an <span class="text-white">eye-tracking button</span> (the user can
                                            have both hands occupied).
                                            The system acquires depth data through the depth camera on HoloLens 2 and
                                            converts them to point clouds.
                                            The user is able to see the <span class="text-white">point cloud</span>
                                            overlapping on the object with the mixed reality experience.
                                            To scan the complete object, the user slowly rotates the object.
                                            The point cloud follows.
                                            When the user is satisfied with the result, the scanning process can be
                                            stopped by the same eye-tracking button.
                                            The <span class="text-white">reconstructed mesh</span> is further
                                            post-processed on the computer.
                                        </p>
                                        <p>
                                            The whole processing pipeline consists of multiple steps.
                                            Without the joint effort of the team, none of these would have been
                                            achieved.
                                        </p>
                                        <p>
                                            The first step is to acquire the depth data.
                                            The depth camera on HoloLens 2 can operate in two modes.
                                            The long-throw mode is used for environment modeling.
                                            The short-throw mode, known as <span class="text-white">AHAT (Articulated HAnd Tracking) mode</span>,
                                            is originally used for hand tracking.
                                            We use the latter since it provides high resolution and high frame rates.
                                            A Unity-based app is deployed on HoloLens 2, which acquires data through the
                                            Research Mode API.
                                        </p>
                                        <p>
                                            HoloLens 2 has limited computation capability.
                                            After some early-stage performance tests, we decided to put the remaining
                                            pipeline on a host machine.
                                            The depth data is streamed to the host via TCP through a wired or wireless
                                            connection.
                                            And then, the data is <span class="text-white">preprocessed</span>.
                                            A lot of operations happen in this step, in addition to converting
                                            depth images to point clouds.
                                            For example, the depth image contains the user's hands.
                                            We remove the part using a hand model and the HoloLens 2 built-in
                                            hand-tracking functionality that provides coordinates of hand joints.
                                        </p>
                                        <p>
                                            The next step is to <span
                                                    class="text-white">register per-frame point clouds</span> into a
                                            global point cloud.
                                            We adopt a local ICP (iterative closet points) algorithm.
                                            We do not make any assumption about the rotation direction.
                                            Instead, we assume small movement between frames and adopt a
                                            human-in-the-loop approach.
                                            When the algorithm decides the movement is above a threshold, it pauses the
                                            registration process and gives visual feedback to the user.
                                            Once the user re-aligns the object with the point cloud, the registration
                                            resumes.
                                        </p>
                                        <p>
                                            Finally, once the point cloud is complete, the next step is to <span
                                                    class="text-white">reconstruct the mesh</span>.
                                            This step is computationally expensive and has a handful of parameters for
                                            fine-tuning.
                                            Therefore, this step is performed offline on the host machine.
                                            It also involves a handful of denoising, smoothing, and voxelizing
                                            algorithms.
                                        </p>
                                        <div class="mt-5 text-center ">
                                            <a class="btn shadow-none project-details-link "
                                               target="_blank"
                                               rel="noopener noreferrer"
                                               href="https://github.com/liuzikai/HoloScanner">
                                                View on
                                                <svg width="1em" height="1em" style="position: relative; top: -0.15em">
                                                    <use xlink:href="#bi-github"></use>
                                                </svg>
                                                GitHub&nbsp;<svg width="1em" height="1em"
                                                                 style="position: relative; top: -0.15em">
                                                    <use xlink:href="#bi-chevron-right"></use>
                                                </svg>
                                            </a>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-4 px-lg-4 mt-0 order-last order-lg-first">
                                    <div class="modal-gallery text-center">
                                        <!-- First side image only showing in lg mode -->
                                        <img class="modal-image show-lg" src="" data-src="/assets/hololens-scanning.jpg"
                                             alt="The 3D scanning process with mixed reality experience"/>
                                        <p class="image-caption show-lg">The 3D Scanning Process with Mixed
                                            Reality
                                            Experience</p>
                                        <!-- Additional images -->
                                        <img class="modal-image" src="" data-src="/assets/hololens-illustration.jpg"
                                             alt="Illustration of the scanning process"/>
                                        <p class="image-caption">Illustration of the Scanning Process</p>
                                        <img class="modal-image" src="" data-src="/assets/hololens-result.jpg"
                                             alt="Two reference objects and their reconstruction results"/>
                                        <p class="image-caption">Two Reference Objects and Their
                                            Reconstruction Results</p>
                                    </div>

                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- KLC3 -->
        <div class="row gx-0 justify-content-center align-items-center project-container" id="klc3">
            <div class="col-lg-4 mt-auto mb-0 mb-lg-auto px-4 px-lg-5 project-svg-container pb-0 pb-lg-5">
                <!-- pb-lg-5 shift it up a little -->
                <div class="icon-placeholder text-center text-white-50" data-include="/assets/klc3-icon.svg">
                    Loading image...
                </div>
            </div>
            <div class="col-lg-8 order-lg-first mt-0 mb-auto mb-lg-0 project-text text-start">
                <h2 class="project-header mb-3 slide-in-text">KLC3</h2>
                <p class="slide-in-text">
                    <!-- Non-break hyphen &#8209; -->
                    KLEE on LC&#8209;3, a <span class="text-white">symbolic execution engine</span> for LC&#8209;3 (an
                    educational assembly) based on LLVM/KLEE
                    for automatic bug detection and test case generation. The system provided automatic
                    feedback to 100+ sophomore students for their LC&#8209;3 assignments in Fall&nbsp;2020.
                    Our work was published at <span class="text-white">ASE&nbsp;2021</span>.
                </p>
                <div class="mt-4 text-end slide-in-text ">
                    <p class="read-more-button" data-bs-toggle="modal" onclick="readMoreClicked(this)"
                       data-bs-target="#klc3More">
                        Read&nbsp;more&nbsp;
                        <svg width="1.2em" height="1.5em" class="read-more-button-circle">
                            <use xlink:href="#bi-plus-circle-fill"></use>
                        </svg>
                    </p>
                </div>
            </div>
        </div>
        <div class="modal fade" id="klc3More" tabindex="-1" aria-labelledby="klc3MoreLabel"
             aria-hidden="true">
            <div class="modal-dialog modal-fullscreen">
                <div class="modal-content">
                    <button type="button" class="modal-close" data-bs-dismiss="modal" aria-label="Close">
                        <svg width="1em" height="1em">
                            <use xlink:href="#bi-x-circle"></use>
                        </svg>
                    </button>
                    <div class="modal-body  px-0 py-0 py-lg-4">
                        <div class="text-center hidden-lg">
                            <img class="modal-image" src="" data-src="/assets/klc3-ase2021-title.jpg"
                                 alt="My Presentation at ASE 2021"/>
                            <p class="image-caption">My Presentation at ASE 2021</p>
                        </div>
                        <div class="container">
                            <div class="row gx-0 mb-5 mb-lg-0 justify-content-center align-items-start">
                                <div class="col-lg-8 mt-0">
                                    <div class="project-text w-100 my-auto text-start text-lg-left">
                                        <p>
                                            Learning to program is difficult.
                                            As with all topics, students learn more quickly when given immediate
                                            feedback tailored to their efforts.
                                            However, while university staff&mdash;instructors and teaching assistants&mdash;are
                                            capable of providing such feedback, staff are not available 24/7 and lack
                                            the time needed to provide individual attention to each student's programs.
                                        </p>
                                        <p>
                                            Automating feedback has been an important topic in CS education for years.
                                            A simple and widely adopted approach is to use systems that run test cases
                                            on student submissions.
                                            However, these systems typically fail to provide feedback tailored to each
                                            student's effort.
                                            For example, these systems cannot give out the test cases but only showing
                                            pass/fail results.
                                        </p>
                                        <p>
                                            To address the need of rapid and tailored feedback, we develop
                                            <span class="text-white">a system for end-to-end automatic feedback</span>.
                                            Specifically, we target LC&#8209;3, a RISC-like educational assembly used in
                                            the courses at UIUC and other universities.
                                            At the heart of the system is <span class="text-white">KLC3</span>, a
                                            concolic (concrete + symbolic) execution engine for LC&#8209;3 built on top
                                            of LLVM/<a target="_blank" rel="noopener noreferrer"
                                                       href="https://klee.github.io">KLEE</a>.
                                        </p>
                                        <p>
                                            At high-level, symbolic execution is a technique that treats inputs as
                                            symbols rather than concrete values, operates them the same way as the
                                            program executes, and checks the result symbolically. Intuitively, it
                                            executes all the possible values concurrently. It provides additional power
                                            to the feedback system, not only to perform more thorough tests, but also to
                                            generate test cases tailored to the students' programs, which can be
                                            given back to the students without undermining the power of the system.
                                        </p>
                                        <p>
                                            We also built tools around KLC3 into the system to cover the whole workflow
                                            of editing, testing and debugging when students do their programming.
                                            At the frontend, we develop a
                                            <span class="text-white">VSCode extension</span>
                                            that provides real-time feedback to students while they are editing their
                                            code, leveraging static analysis to provide warnings of possible bugs or
                                            poor styles. At the backend, we develop a fully-fledged
                                            <span class="text-white">in-browser LC&#8209;3 simulator</span>
                                            with WebAssembly, freeing students from compiling the Unix LC&#8209;3 tools
                                            locally.
                                        </p>
                                        <p>
                                            We deployed the system to provide feedback for the assembly programming
                                            assignments in a class of <span class="text-white">over 100 students</span>
                                            in Fall 2020. Students wrote a median of around 700 lines of assembly for
                                            these assignments, making heavy use of our tools to understand and eliminate
                                            their bugs. Anonymous student feedback on the tools was uniformly positive.
                                            Our work was published and presented at
                                            <span class="text-white">ASE 2021</span>, the 36th IEEE/ACM International
                                            Conference on Automated Software Engineering.
                                        </p>
                                        <p>
                                            Concolic execution is powerful, but the power doesn't come for free.
                                            It requires a lot of computation power. A lot of effort has been made into
                                            KLC3
                                            to provide feedback in time after students submit their code. Those works
                                            also form parts of my <span class="text-white">Bachelor's thesis</span>.
                                        </p>
                                        <div class="mt-5 text-center ">
                                            <a class="btn shadow-none project-details-link "
                                               target="_blank"
                                               rel="noopener noreferrer"
                                               href="https://doi.org/10.1109/ASE51524.2021.9678837">
                                                The ASE 2021 Paper&nbsp;<svg width="1em" height="1em"
                                                                             style="position: relative; top: -0.15em">
                                                    <use xlink:href="#bi-chevron-right"></use>
                                                </svg>
                                            </a>
                                        </div>
                                        <div class="mt-0 text-center ">
                                            <a class="btn shadow-none project-details-link  "
                                               target="_blank"
                                               rel="noopener noreferrer"
                                               href="https://lumetta.web.engr.illinois.edu/ase2021.html">
                                                The Replication Package&nbsp;<svg width="1em" height="1em"
                                                                                  style="position: relative; top: -0.15em">
                                                    <use xlink:href="#bi-chevron-right"></use>
                                                </svg>
                                            </a>
                                        </div>
                                        <div class="mt-0 text-center ">
                                            <a class="btn shadow-none project-details-link "
                                               target="_blank"
                                               rel="noopener noreferrer"
                                               href="https://hdl.handle.net/2142/110284">
                                                My Bachelor's Thesis on UIUC IDEALS&nbsp;<svg width="1em" height="1em"
                                                                                              style="position: relative; top: -0.15em">
                                                    <use xlink:href="#bi-chevron-right"></use>
                                                </svg>
                                            </a>
                                        </div>
                                        <div class="mt-0 text-center ">
                                            <a class="btn shadow-none project-details-link  "
                                               target="_blank"
                                               rel="noopener noreferrer" href="https://github.com/liuzikai/klc3">
                                                KLC3 on GitHub&nbsp;<svg width="1em" height="1em"
                                                                         style="position: relative; top: -0.15em">
                                                    <use xlink:href="#bi-chevron-right"></use>
                                                </svg>
                                            </a>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-4 px-lg-4 mt-0 order-last order-lg-first">
                                    <div class="modal-gallery text-center">
                                        <!-- First side image only showing in lg mode -->
                                        <img class="modal-image show-lg" src=""
                                             data-src="/assets/klc3-ase2021-title.jpg"
                                             alt="My Presentation at ASE 2021"/>
                                        <p class="image-caption show-lg">My Presentation at
                                            ASE 2021</p>
                                        <!-- Additional images -->
                                    </div>

                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Wireless Charging Table -->
        <div class="row gx-0 justify-content-center align-items-center project-container" id="wirelessChargingTable">
            <div class="col-lg-4 mt-auto mb-0 mb-lg-auto px-4 project-svg-container pb-4 pb-lg-0">
                <div class="h-auto">
                    <div class="icon-placeholder text-center text-white-50"
                         data-include="/assets/wireless-charging-table-icon.svg">Loading image...
                    </div>
                </div>
            </div>
            <div class="col-lg-8 mt-0 mb-auto mb-lg-0 project-text text-start">
                <h2 class="project-header mb-3 slide-in-text">
                    Wireless Charging Table with Auto Alignment
                </h2>
                <p class="slide-in-text">
                    As our Bachelor's senior design project, my teammates and I built a smart table that
                    <span class="text-white"> automatically aligns the wireless charging coils with the devices</span>,
                    combining
                    electrical engineering, computer vision, and mechanical engineering.
                    We won <span class="text-white">the most Interdisciplinary Project Award</span>
                    at the ZJU-UIUC Institute.
                </p>
                <div class="mt-4 text-end slide-in-text ">
                    <p class="read-more-button" data-bs-toggle="modal" onclick="readMoreClicked(this)"
                       data-bs-target="#wirelessChargingTableMore">
                        Read&nbsp;more&nbsp;
                        <svg width="1.2em" height="1.5em" class="read-more-button-circle">
                            <use xlink:href="#bi-plus-circle-fill"></use>
                        </svg>
                    </p>
                </div>
            </div>
        </div>
        <div class="modal fade" id="wirelessChargingTableMore" tabindex="-1"
             aria-labelledby="wirelessChargingTableMoreLabel"
             aria-hidden="true">
            <div class="modal-dialog modal-fullscreen">
                <div class="modal-content">
                    <button type="button" class="modal-close" data-bs-dismiss="modal" aria-label="Close">
                        <svg width="1em" height="1em">
                            <use xlink:href="#bi-x-circle"></use>
                        </svg>
                    </button>
                    <div class="modal-body px-0 py-0 py-lg-4">
                        <div class="text-center hidden-lg">
                            <!-- GIF is too large, ~20MB, while MP4 is only 2MB -->
                            <video style="width: 100%; object-fit: cover" autoplay playsinline muted loop>
                                <source class="modal-lazy-video" src="" data-src="/assets/qi-table-demo-muted.mp4"
                                        type="video/mp4">
                                Sorry, your browser does not support the video tag.
                            </video>
                            <p class="image-caption">
                                Demonstration of the Table Charging Multiple Cellphones</p>
                        </div>
                        <div class="container">
                            <div class="row gx-0 mb-5 mb-lg-0 justify-content-center align-items-start">
                                <div class="col-lg-8 mt-0">
                                    <div class="project-text w-100 my-auto text-start text-lg-left">
                                        <p>
                                            Nowadays, more and more mobile devices support wireless charging. Among
                                            them, the Qi standard is the most widely adopted protocol. Qi
                                            hotspots can be found in many public places, such as cafeterias and
                                            airports. However, the device being charged needs to be properly aligned
                                            with the charging coil (by the time we developed this system, Apple
                                            MagSafe for iPhones/AirPods was not a thing yet).
                                        </p>
                                        <p>
                                            Our goal was to provide
                                            <span class="text-white">seamless wireless charging experience</span> at
                                            Qi hotspots like cafeterias, where customers sit around tables. We designed
                                            a smart table that automatically aligns wireless charging coils with users'
                                            devices, which are detected with computer vision. The coils are moved by a
                                            mechanical system like the one used in 3D printers. Up to 3 devices can be
                                            charged
                                            concurrently. Phone cases with common thickness are allowed. The system is
                                            able to detect if a device on the table supports wireless charging with a
                                            few trials. If not, the device is ignored.
                                        </p>
                                        <p>
                                            We designed and implemented the table. Our team won
                                            <span class="text-white">the most Interdisciplinary Project Award</span>
                                            of ECE445 Senior Design at the ZJU-UIUC Joint Institute in 2021.
                                        </p>
                                        <div class="mt-5 text-center ">
                                            <a class="btn shadow-none project-details-link "
                                               target="_blank"
                                               rel="noopener noreferrer"
                                               href="https://github.com/liuzikai/wireless-charging-table">
                                                View on
                                                <svg width="1em" height="1em" style="position: relative; top: -0.15em">
                                                    <use xlink:href="#bi-github"></use>
                                                </svg>
                                                GitHub&nbsp;<svg width="1em" height="1em"
                                                                 style="position: relative; top: -0.15em">
                                                    <use xlink:href="#bi-chevron-right"></use>
                                                </svg>
                                            </a>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-4 px-lg-4 mt-0 order-last order-lg-first">
                                    <div class="modal-gallery text-center">
                                        <!-- First side image only showing in lg mode -->
                                        <video class="show-lg" style="width: 100%; object-fit: cover" autoplay
                                               playsinline muted
                                               loop>
                                            <source class="modal-lazy-video" src=""
                                                    data-src="/assets/qi-table-demo-muted.mp4"
                                                    type="video/mp4">
                                            Sorry, your browser does not support the video tag.
                                        </video>
                                        <p class="image-caption show-lg">Demonstration of the
                                            Table Charging Multiple Cellphones</p>
                                        <!-- Additional images -->
                                        <video style="width: 100%; object-fit: cover" autoplay playsinline muted loop>
                                            <source class="modal-lazy-video" src=""
                                                    data-src="/assets/qi-table-mechanism.mp4" type="video/mp4">
                                            Sorry, your browser does not support the video tag.
                                        </video>
                                        <p class="image-caption">Mechanical System of
                                            the Table</p>
                                    </div>

                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Placeholder -->
        <div class="show-lg" style="min-height: 20vh !important;"></div>

        <!-- AuroraOS and Ozone -->
        <!-- Full page < lg, in two columns when >= lg -->
        <!-- d-flex required to centralize vertically using my-lg-auto when >= lg -->
        <!-- project-container has no effect when < lg since it only claims min-height -->
        <div class="justify-content-center align-items-center project-container d-flex" id="combinedOS">
            <!-- When >= lg, two projects are aligned top (mt-lg-0) to row while this row is centralized vertically -->
            <!-- When < lg, they are no longer col-lg but project-container, and my-auto inside centralize stuff    -->
            <div class="container my-lg-auto">
                <div class="row gx=0">
                    <div class="col-lg-6 project-container-down-lg d-flex" id="auroraOS">
                        <div class="mt-lg-0 mb-lg-0 my-auto"> <!-- d-flex of parent + this div gives vertical center -->
                            <div class="mb-4 mx-auto project-svg-container mt-auto mt-lg-0">
                                <!-- need both mx-auto, why? -->
                                <div class="mx-auto px-2 px-lg-3" id="auroraOSIcon">
                                    <div class="icon-placeholder text-center text-white-50"
                                         data-include="/assets/aurora-os-icon.svg"></div>
                                </div>
                            </div>
                            <div class="pt-lg-3 pb-lg-0 mt-0 mb-auto mb-lg-0 project-text text-start">
                                <h2 class="project-header mb-4 slide-in-text">AuroraOS</h2>
                                <p class="slide-in-text">
                                    <span class="text-white">x86 operating system</span> with basic
                                    kernel functions, a scheduler with wait lists, SVGA
                                    driver with hardware acceleration, and GUI.

                                    Our team got a prize at the <span
                                            class="text-white">ECE391 design competition</span>
                                    amongst
                                    all Computer Engineers at UIUC.
                                </p>
                                <!-- This button is hidden when >= lg -->
                                <div class="mt-4 text-end slide-in-text hidden-lg ">
                                    <p class="read-more-button" data-bs-toggle="modal"
                                       onclick="readMoreClicked(this)"
                                       data-bs-target="#auroraOSMore">
                                        Read&nbsp;more&nbsp;
                                        <svg width="1.2em" height="1.5em" class="read-more-button-circle">
                                            <use xlink:href="#bi-plus-circle-fill"></use>
                                        </svg>
                                    </p>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-lg-6 project-container-down-lg d-flex" id="ozone">
                        <div class="mt-lg-0 mb-lg-0 my-auto"> <!-- d-flex of parent + this div gives vertical center -->
                            <div class="mb-4 mx-auto project-svg-container mt-auto mt-lg-0">
                                <!-- need both mx-auto, why? -->
                                <div class="mx-auto px-2 px-lg-3" id="ozoneIcon">
                                    <div class="icon-placeholder text-center text-white-50"
                                         data-include="/assets/ozone-icon.svg"></div>
                                </div>
                            </div>
                            <div class="pt-lg-3 pb-lg-0 mt-0 mb-auto mb-lg-0 project-text text-start">
                                <h2 class="project-header mb-4 slide-in-text">Ozone</h2>
                                <p class="slide-in-text">
                                    <span class="text-white">ARMv8 multi-kernel operating system</span> partically based
                                    on
                                    Barrelfish, featuring memory management systems, multiple IPC mechanisms,
                                    and several user-level services. Team project at ETH <span class="text-white">Advanced Operating Systems</span>.
                                </p>
                                <!-- This button is hidden when >= lg -->
                                <div class="mt-4 text-end slide-in-text hidden-lg ">
                                    <p class="read-more-button" data-bs-toggle="modal"
                                       onclick="readMoreClicked(this)"
                                       data-bs-target="#ozoneMore">
                                        Read&nbsp;more&nbsp;
                                        <svg width="1.2em" height="1.5em" class="read-more-button-circle">
                                            <use xlink:href="#bi-plus-circle-fill"></use>
                                        </svg>
                                    </p>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <!-- To align two Read more buttons, having a new row seems to be the easiest way -->
                <div class="row show-lg text-end slide-in-text" aria-hidden="true" style="font-size: 1em">
                    <div class="col-lg-6" style="padding: 0 2.5rem">
                        <p class="read-more-button" data-bs-toggle="modal"
                           onclick="readMoreClicked(this)"
                           data-bs-target="#auroraOSMore">
                            Read&nbsp;more&nbsp;
                            <svg width="1.2em" height="1.5em" class="read-more-button-circle">
                                <use xlink:href="#bi-plus-circle-fill"></use>
                            </svg>
                        </p>
                    </div>
                    <div class="col-lg-6 " style="padding: 0 2.5rem">
                        <p class="read-more-button" data-bs-toggle="modal"
                           onclick="readMoreClicked(this)"
                           data-bs-target="#ozoneMore">
                            Read&nbsp;more&nbsp;
                            <svg width="1.2em" height="1.5em" class="read-more-button-circle">
                                <use xlink:href="#bi-plus-circle-fill"></use>
                            </svg>
                        </p>
                    </div>
                </div>
            </div>
        </div>
        <div class="modal fade" id="auroraOSMore" tabindex="-1" aria-labelledby="auroraOSMoreLabel"
             aria-hidden="true">
            <div class="modal-dialog modal-fullscreen">
                <div class="modal-content">
                    <button type="button" class="modal-close" data-bs-dismiss="modal" aria-label="Close">
                        <svg width="1em" height="1em">
                            <use xlink:href="#bi-x-circle"></use>
                        </svg>
                    </button>
                    <div class="modal-body px-0 py-0 py-lg-4">
                        <div class="hidden-lg text-center">
                            <img class="modal-image" src="" data-src="/assets/aurora-os-competition.jpg"
                                 alt="Our Team at ECE391 Design Competition"/>
                            <p class="image-caption">Our Team at ECE391 Design
                                Competition</p>
                        </div>
                        <div class="container">
                            <div class="row gx-0 mb-5 mb-lg-0 justify-content-center align-items-start">
                                <div class="col-lg-8 mt-0">
                                    <div class="project-text w-100 my-auto text-start text-lg-left">
                                        <p>
                                            During Fall 2019, as a part of the UIUC ECE391 course, my teammates and I
                                            designed and implemented <span class="text-white">AuroraOS</span>, an x86
                                            operating system. The system was emulated in QEMU.
                                        </p>
                                        <p>
                                            We implemented the <span class="text-white">basic kernel features</span>
                                            required by the course, including memory management, real-time clock,
                                            interrupts, system calls, the user program loader, a read-only file system,
                                            terminal, and a round-robin scheduler.
                                        </p>
                                        <p>
                                            In addition to these basic features, we implemented a handful of
                                            <span class="text-white">extra functions</span>. We implemented a 1024x768
                                            16-bit high color SVGA driver with hardware acceleration and alpha blending.
                                            On top of it, we built an interactive graphic user interface to support
                                            multiple terminals as well as mouse control.
                                            We also implemented an advanced scheduler with wait lists (similar to the
                                            one in Linux) and the CMOS clock. To ease the development and debug work, we
                                            also employed a cross-compiling toolchain from macOS to x86.
                                        </p>
                                        <p>
                                            ECE391 hosted an <span class="text-white">OS design competition</span>
                                            every semester. In Fall 2019, our team got the third prize in the
                                            competition.
                                        </p>
                                        <!--<div class="mt-5 text-center ">
                                            <a class="btn shadow-none project-details-link "
                                               target="_blank"
                                               rel="noopener noreferrer" href="https://github.com/liuzikai/AuroraOS">
                                                View on
                                                <svg width="1em" height="1em" style="position: relative; top: -0.15em">
                                                    <use xlink:href="#bi-github"></use>
                                                </svg>
                                                GitHub&nbsp;<svg width="1em" height="1em" style="position: relative; top: -0.15em">
                                                    <use xlink:href="#bi-chevron-right"></use>
                                                </svg>
                                            </a>
                                        </div>-->
                                    </div>
                                </div>
                                <div class="col-lg-4 px-lg-4 mt-0 order-last order-lg-first">
                                    <div class="modal-gallery text-center">
                                        <!-- First side image only showing in lg mode -->
                                        <img class="modal-image show-lg" src=""
                                             data-src="/assets/aurora-os-competition.jpg"
                                             alt="Our team at ECE391 design competition"/>
                                        <p class="image-caption show-lg">
                                            Our Team at ECE391 Design Competition</p>
                                        <!-- Additional images -->
                                        <img class="modal-image" src="" data-src="/assets/aurora-os-photo.jpg"
                                             alt="AuroraOS"/>
                                        <p class="image-caption">
                                            Emulation with QEMU</p>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="modal fade" id="ozoneMore" tabindex="-1" aria-labelledby="ozoneMoreLabel"
             aria-hidden="true">
            <div class="modal-dialog modal-fullscreen">
                <div class="modal-content">
                    <button type="button" class="modal-close" data-bs-dismiss="modal" aria-label="Close">
                        <svg width="1em" height="1em">
                            <use xlink:href="#bi-x-circle"></use>
                        </svg>
                    </button>
                    <div class="modal-body px-0 py-0 py-lg-4">
                        <div class="text-center hidden-lg">
                            <img class="modal-image" src="" data-src="/assets/ozone-team.jpg"
                                 alt="Our team at the Advanced Operating Systems demo"/>
                            <p class="image-caption">
                                Our team at the Advanced Operating Systems Demo</p>
                        </div>
                        <div class="container">
                            <div class="row gx-0 mb-5 mb-lg-0 justify-content-center align-items-start">
                                <div class="col-lg-8 mt-0">
                                    <div class="project-text w-100 my-auto text-start text-lg-left">
                                        <p>
                                            At the Fall 2022 offering of the
                                            <span class="text-white">Advanced Operating Systems</span>
                                            at ETH Zurich, my teammates and I built
                                            <span class="text-white">Ozone</span> ("OS one").
                                            Ozone is an <span class="text-white">ARMv8</span> operating system,
                                            built upon a research OS <a target="_blank" rel="noopener noreferrer"
                                                                        href="https://barrelfish.org">Barrelfish</a>.
                                            Similar to Barrelfish, Ozone is a
                                            <span class="text-white">multikernel</span> OS&mdash;each CPU runs an
                                            independent copy of the kernel, while the shared states are minimized and
                                            intercore communications are pushed to the
                                            user space. Being also a microkernel OS, Ozone (Barrelfish) delegates
                                            various services to user-space programs, while the kernel provides
                                            lightweight inter-process
                                            communication mechanisms. It also adopts a lot of ideas from previous OS
                                            research, such as the capability system, processor dispatch with upcalls,
                                            user-space RPC, etc.
                                        </p>
                                        <p>
                                            As part of the project, I developed the
                                            <span class="text-white">virtual memory management system</span>.
                                            The system supports memory mapping to given addresses, mapping to dynamic
                                            addresses, on-demand paging, and unmapping. Combined the buddy allocation
                                            algorithm and the red-black tree, all these operations can be done in
                                            logarithmic time complexities. Combining with the physical memory system
                                            developed by my teammate, which similarly adopts the binary search tree,
                                            Ozone is able to achieve efficient memory allocation for processes.
                                        </p>
                                        <p>
                                            In addition, I worked on the process management system, intra- and
                                            inter-core communications, the naming service, etc. We ran Ozone on both
                                            QEMU and all four cores of the Toradex Colibri i.MX8 development board.
                                        </p>
                                    </div>
                                </div>
                                <div class="col-lg-4 px-lg-4 mt-0 order-last order-lg-first">
                                    <div class="modal-gallery text-center">
                                        <!-- First side image only showing in lg mode -->
                                        <img class="modal-image show-lg" src="" data-src="/assets/ozone-team.jpg"
                                             alt="Our team and the teaching staff at the Advanced Operating Systems demo"/>
                                        <p class="image-caption show-lg">
                                            Our Team and the Teaching Staff at the Advanced Operating Systems Demo</p>
                                        <!-- Additional images -->
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Placeholder -->
        <div class="show-lg" style="min-height: 20vh !important;"></div>

        <!-- RV32I Processor and FPGA BoxHead -->
        <!-- Full page < lg, in two columns when >= lg -->
        <!-- d-flex required to centralize vertically using my-lg-auto when >= lg -->
        <!-- project-container has no effect when < lg since it only claims min-height -->
        <div class="justify-content-center align-items-center project-container d-flex" id="combinedChip">
            <!-- When >= lg, two projects are aligned top (mt-lg-0) to row while this row is centralized vertically -->
            <!-- When < lg, they are no longer col-lg but project-container, and my-auto inside centralize stuff    -->
            <div class="container my-lg-auto">
                <div class="row gx-0">
                    <div class="col-lg-6 project-container-down-lg d-flex" id="riscvProcessor">
                        <div class="mt-lg-0 mb-lg-0 my-auto"> <!-- d-flex of parent + this div gives vertical center -->
                            <div class="mb-4 mx-auto project-svg-container mt-auto mt-lg-0">
                                <!-- need both mx-auto, why? -->
                                <div class="mx-auto px-2 px-lg-4" id="riscvIcon">
                                    <div class="icon-placeholder text-center text-white-50"
                                         data-include="/assets/rv32i-processor-icon.svg"></div>
                                </div>
                            </div>
                            <div class="pt-lg-3 pb-lg-0 mt-0 mb-auto mb-lg-0 project-text project-text-left text-start">
                                <h2 class="project-header mb-4 slide-in-text">RISC&#8209;V Processor Design</h2>
                                <p class="slide-in-text">
                                    As the UIUC ECE411 design project, my teammates and I designed and simulated a
                                    pipeline RISC-V processor in <span class="text-white">SystemVerilog</span>.
                                    The system features parameterized caches, tournament branch predictions,
                                    and a next-line prefetcher.
                                </p>
                                <!-- This button is hidden when >= lg -->
                                <div class="mt-4 text-end slide-in-text hidden-lg ">
                                    <p class="read-more-button" data-bs-toggle="modal"
                                       onclick="readMoreClicked(this)"
                                       data-bs-target="#riscvProcessorMore">
                                        Read&nbsp;more&nbsp;
                                        <svg width="1.2em" height="1.5em" class="read-more-button-circle">
                                            <use xlink:href="#bi-plus-circle-fill"></use>
                                        </svg>
                                    </p>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-lg-6 project-container-down-lg d-flex" id="boxhead">
                        <div class="mt-lg-0 mb-lg-0 my-auto"> <!-- d-flex of parent + this div gives vertical center -->
                            <div class="mb-4 mx-auto project-svg-container mt-auto mt-lg-0">
                                <!-- need both mx-auto, why? -->
                                <div class="m-auto px-2 px-lg-4" id="boxheadIcon">
                                    <div class="icon-placeholder text-center text-white-50"
                                         data-include="/assets/fpga-boxhead-icon.svg"></div>
                                </div>
                            </div>
                            <div class="pt-lg-3 pb-lg-0 mt-0 mb-auto mb-lg-0 project-text project-text-right text-start">
                                <h2 class="project-header mb-4 slide-in-text">Boxhead Game on FPGA</h2>
                                <p class="slide-in-text">
                                    As the UIUC ECE385 design project, my teammate and I developed the
                                    Boxhead video game on
                                    the Altera FPGA. We wrote the SRAM controller and the hardware graphic engine in
                                    <span class="text-white">SystemVerilog</span>,
                                    and the game logic in <span class="text-white">C</span>.
                                </p>
                                <!-- This button is hidden when >= lg -->
                                <div class="mt-4 text-end slide-in-text hidden-lg ">
                                    <p class="read-more-button" data-bs-toggle="modal"
                                       onclick="readMoreClicked(this)"
                                       data-bs-target="#boxheadMore">
                                        Read&nbsp;more&nbsp;
                                        <svg width="1.2em" height="1.5em" class="read-more-button-circle">
                                            <use xlink:href="#bi-plus-circle-fill"></use>
                                        </svg>
                                    </p>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row show-lg text-end slide-in-text" aria-hidden="true">
                    <div class="col-lg-6" style="padding: 0 2.5rem">
                        <p class="read-more-button" data-bs-toggle="modal"
                           onclick="readMoreClicked(this)"
                           data-bs-target="#riscvProcessorMore">
                            Read&nbsp;more&nbsp;
                            <svg width="1.2em" height="1.5em" class="read-more-button-circle">
                                <use xlink:href="#bi-plus-circle-fill"></use>
                            </svg>
                        </p>
                    </div>
                    <div class="col-lg-6" style="padding: 0 2.5rem">
                        <p class="read-more-button" data-bs-toggle="modal"
                           onclick="readMoreClicked(this)"
                           data-bs-target="#boxheadMore">
                            Read&nbsp;more&nbsp;
                            <svg width="1.2em" height="1.5em" class="read-more-button-circle">
                                <use xlink:href="#bi-plus-circle-fill"></use>
                            </svg>
                        </p>
                    </div>
                </div>
            </div>
        </div>
        <div class="modal fade" id="riscvProcessorMore" tabindex="-1"
             aria-labelledby="riscvProcessorMoreLabel"
             aria-hidden="true">
            <div class="modal-dialog modal-fullscreen">
                <div class="modal-content">
                    <button type="button" class="modal-close" data-bs-dismiss="modal" aria-label="Close">
                        <svg width="1em" height="1em">
                            <use xlink:href="#bi-x-circle"></use>
                        </svg>
                    </button>
                    <div class="modal-body px-0 py-0 py-lg-4">
                        <div class="container">
                            <div class="row gx-0 mb-5 mb-lg-0 justify-content-center align-items-start">
                                <div class="col-lg-8 mt-0">
                                    <div class="project-text w-100 my-auto text-start text-lg-left">
                                        <p>
                                            For the design project of UIUC
                                            <span class="text-white">ECE411 Computer Organization and Design</span>
                                            in Fall 2020, my teammates and I designed and simulated an
                                            <span class="text-white">RV32I processor</span> in
                                            SystemVerilog. The processor has a 5-stage pipeline with data forwarding and
                                            hazard detection. We implemented the Tournament Branch Predictor, combining
                                            both local and global branch histories. As for caches, we implemented a
                                            parameterized cache module with the pseudo LRU replacement policy, from
                                            which L1/L2 I-/D-caches are instantiated. We also implemented a
                                            next-line prefetcher.
                                        </p>
                                        <div class="mt-5 text-center ">
                                            <a class="btn shadow-none project-details-link "
                                               target="_blank"
                                               rel="noopener noreferrer"
                                               href="https://github.com/liuzikai/ECE411-RV32I-Processor">
                                                View on
                                                <svg width="1em" height="1em" style="position: relative; top: -0.15em">
                                                    <use xlink:href="#bi-github"></use>
                                                </svg>
                                                GitHub&nbsp;<svg width="1em" height="1em"
                                                                 style="position: relative; top: -0.15em">
                                                    <use xlink:href="#bi-chevron-right"></use>
                                                </svg>
                                            </a>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-4 px-lg-4 mt-0 order-last order-lg-first">
                                    <div class="modal-gallery text-center">
                                        <img class="modal-image" src="" data-src="/assets/rv32i-processor-cache.jpg"
                                             alt="Presentation of the cache performance: more than 90% hit rates for all levels and significant speedups, varying for different workloads"/>
                                        <p class="image-caption">
                                            Presentation of the cache performance</p>
                                        <img class="modal-image" src="" data-src="/assets/rv32i-processor-datapath.jpg"

                                             alt="Datapath block diagram of the processor"/>
                                        <p class="image-caption">
                                            Datapath of the Processor</p>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="modal fade" id="boxheadMore" tabindex="-1"
             aria-labelledby="boxheadMoreLabel"
             aria-hidden="true">
            <div class="modal-dialog modal-fullscreen">
                <div class="modal-content">
                    <button type="button" class="modal-close" data-bs-dismiss="modal" aria-label="Close">
                        <svg width="1em" height="1em">
                            <use xlink:href="#bi-x-circle"></use>
                        </svg>
                    </button>
                    <div class="modal-body px-0 py-0 py-lg-4">
                        <div class="text-center hidden-lg">
                            <img class="modal-image" src="" data-src="/assets/boxhead-original.jpg"
                                 alt="Screenshot of the original Boxhead game: two players killing zombines"/>
                            <p class="image-caption">
                                Original BoxHead Game<br>(We Implemented a Simplified Version)</p>
                        </div>
                        <div class="container">
                            <div class="row gx-0 mb-5 mb-lg-0 justify-content-center align-items-start">
                                <div class="col-lg-8 mt-0">
                                    <div class="project-text w-100 my-auto text-start text-lg-left">
                                        <p>
                                            As the design project of UIUC
                                            <span class="text-white">ECE385 Digital Systems Laboratory</span> in Spring
                                            2020, my teammate and I developed a dual-player video game on the Altera
                                            DE2-115 FPGA, simulating the well-known zombie-killing game Boxhead.
                                        </p>
                                        <p>
                                            We developed a
                                            <span class="text-white">framebuffer-based hardware graphic engine</span>.
                                            The engine supports 640x480 16-bit VGA output, 60Hz refresh rate, double
                                            buffering, auto background refresh, and direct memory access (DMA). On-chip
                                            memory is not large enough to hold the frame buffers, so SRAM is used. One
                                            challenge we encountered was that the SRAM is not fast enough to support the
                                            full refresh rate. VGA standard requires 25MHz output pixel rate. However,
                                            the main clock of the FPGA is only 50MHz. As SRAM does not support
                                            concurrent R/W, we only have two read and/or write operations per pixel per
                                            frame on average. Excluding one necessary read to generate VGA output, the
                                            remaining one write is not enough, since we must overwrite the background
                                            before drawing any sprite.
                                        </p>
                                        <p>
                                            One possible solution is reducing the actual game refresh rate, for
                                            example, to 30Hz, half of VGA refresh rate, by switching the game frame
                                            every
                                            two VGA frames. However, this approach only provides one more write cycle
                                            per pixel, as read operations still take half of the time (we must output
                                            VGA color at 25MHz). On the other hand, since we are implementing a shooting
                                            game, reducing the refresh rate is likely to diminish the user experience.
                                        </p>
                                        <p>
                                            Our solution to this problem is boasting the SRAM to 100MHz. We generated
                                            100MHz clock signals from the 50MHz input clock with the PLL (phase-locked
                                            loop). The read/write operations are carefully distributed so that SRAM can
                                            operate in this extreme condition. Offsets are carefully adjusted to
                                            compensate for data delay. The 100MHz SRAM controller serves as the base of
                                            our
                                            high-efficiency graphic engine and allows a 60Hz game refresh rate.
                                        </p>
                                        <p>
                                            In addition to the graphic engine, we implemented the
                                            <span class="text-white">USB keyboard driver</span> and wrote the
                                            <span class="text-white">game logic in C</span>, running on the Nois II
                                            system-on-chip (SoC).
                                        </p>
                                        <div class="mt-5 text-center ">
                                            <a class="btn shadow-none project-details-link "
                                               target="_blank"
                                               rel="noopener noreferrer"
                                               href="https://github.com/liuzikai/FPGA-Boxhead">
                                                View on
                                                <svg width="1em" height="1em" style="position: relative; top: -0.15em">
                                                    <use xlink:href="#bi-github"></use>
                                                </svg>
                                                GitHub&nbsp;<svg width="1em" height="1em"
                                                                 style="position: relative; top: -0.15em">
                                                    <use xlink:href="#bi-chevron-right"></use>
                                                </svg>
                                            </a>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-4 px-lg-4 mt-0 order-last order-lg-first">
                                    <div class="modal-gallery text-center">
                                        <!-- First side image only showing in lg mode -->
                                        <img class="modal-image show-lg" src="" data-src="/assets/boxhead-original.jpg"
                                             alt="Screenshot of the original Boxhead game: two players killing zombines"/>
                                        <p class="image-caption show-lg">
                                            Original BoxHead Game<br>(We Implemented a Simplified Version)</p>
                                        <!-- Additional images -->
                                        <img class="modal-image" src="" data-src="/assets/boxhead-block-diagram.jpg"
                                             alt="Block diagram of the system"/>
                                        <p class="image-caption">
                                            Block Diagram of the System</p>
                                        <img class="modal-image" src="" data-src="/assets/boxhead-pll-cycles.jpg"
                                             alt="PLL cycle allocation: 3 cycles for writes and 1 cycle for read"/>
                                        <p class="image-caption">
                                            PLL Cycle Allocation</p>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Placeholder -->
        <div class="show-lg" style="min-height: 10vh !important;"></div>
    </div>
</section>

<!-- Final words -->
<div class="container px-4 px-lg-5 d-flex h-100 align-items-center justify-content-center">
    <div class="d-flex justify-content-center">
        <div class="masthead-text text-center">
            <p class="mx-auto mt-1 mb-0">I am looking forward to the next exciting&nbsp;project.</p>
            <p class="mx-auto mt-1 mb-0">Are you going to join me?</p>
        </div>
    </div>
</div>

<%- include("components/_contact.ejs") %>
<%- include("components/_footer.ejs") %>

<!-- Core JS with Bootstrap components needed -->
<script id="main-script" src="/js/scripts.min.js" data-page="projects"></script>
</body>
</html>
